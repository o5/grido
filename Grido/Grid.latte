{**
 * This file is part of the Grido (http://grido.bugyik.cz)
 *
 * Copyright (c) 2011 Petr BugyÃ­k (http://petr.bugyik.cz)
 *
 * For the full copyright and license information, please view
 * the file LICENSE.md that was distributed with this source code.
 *}

{snippet grid}
{?
    $form->getElementPrototype()->class[] = 'ajax grido';

    $operation = $control->hasOperation();
    $actions = $control->hasActions() ? $control->getComponent(\Grido\Components\Actions\Action::ID)->getComponents() : array();

    $filters = $control->hasFilters() ? $form->getComponent(\Grido\Components\Filters\Filter::ID)->getComponents() : array();
    $filterRenderType = $control->getFilterRenderType();

    $columns = $control->getComponent(\Grido\Components\Columns\Column::ID)->getComponents();
    $columnCount = count($columns) + ($operation ? 1 : 0);
    $showActionsColumn = $actions || ($filters && $filterRenderType == \Grido\Components\Filters\Filter::RENDER_INNER);

    /* TWITTER BOOTSTRAP 2/3 */
    $buttons = $form->getComponent('buttons');
    $buttons->getComponent('search')->getControlPrototype()->class[] = 'btn btn-default btn-sm search';
    $buttons->getComponent('reset')->getControlPrototype()->class[] = 'btn btn-default btn-sm reset';

    $form['count']->controlPrototype->class[] = 'form-control';
    $operation ? $form['operations']['operations']->controlPrototype->class[] = 'form-control' : NULL}

    {foreach $filters as $filter}
        {?$filter->controlPrototype->class[] = 'form-control'}
    {/foreach}

    {foreach $actions as $action}
        {?
            $element = $action->getElementPrototype();
            $element->class[] = 'btn btn-default btn-xs btn-mini';
        }
        {if $icon = $action->getOption('icon')}
        {?
            $element->setText(' ' . $action->getLabel());
            $element->insert(0, \Nette\Utils\Html::el('i')->setClass(array("glyphicon glyphicon-$icon fa fa-$icon icon-$icon")));
        }
        {/if}
    {/foreach}
{if $form->getErrors()}
<ul n:foreach="$form->getErrors() as $error">
    <li>{$error}</li>
</ul>
{/if}
{form form}
{if $filterRenderType == \Grido\Components\Filters\Filter::RENDER_OUTER}
    <div n:block="outerFilter" class="filter outer">
        <div class="items">
            <span n:foreach="$filters as $filter" class="grid-filter-{$filter->getName()}">
                {$filter->getLabel()}
                {$filter->getControl()}
            </span>
        </div>
        <div class="buttons">
            {formContainer buttons}
                {if $filters}
                    {input search}
                {/if}
                {input reset}
            {/formContainer}
        </div>
    </div>
{/if}

{block table}
{$control->getTablePrototype()->startTag()|noescape}
    <thead>
        <tr class="head">
            <th n:if="$operation" class="checker"{if $filters} rowspan="{if $filterRenderType == \Grido\Components\Filters\Filter::RENDER_OUTER}1{else}2{/if}"{/if}>
                <input type="checkbox" title="{_'Grido.Invert'}">
            </th>
            {foreach $columns as $column}
                {$column->getHeaderPrototype()->startTag()|noescape}
                    {if $column->isSortable()}
                        <a n:if="!$column->getSort()" n:href="sort! [$column->getName() => \Grido\Components\Columns\Column::ORDER_ASC]" class="ajax">{$column->getLabel()|noescape}</a>
                        <a n:if="$column->getSort() == \Grido\Components\Columns\Column::ORDER_ASC" n:href="sort! [$column->getName() => \Grido\Components\Columns\Column::ORDER_DESC]" class="sort ajax">{$column->getLabel()|noescape}</a>
                        <a n:if="$column->getSort() == \Grido\Components\Columns\Column::ORDER_DESC" n:href="sort! [$column->getName() => \Grido\Components\Columns\Column::ORDER_ASC]" class="sort ajax">{$column->getLabel()|noescape}</a>
                        <span></span>
                    {else}
                        {$column->getLabel()|noescape}
                    {/if}
                {$column->getHeaderPrototype()->endTag()|noescape}
            {/foreach}
            <th n:if="$showActionsColumn" class="actions center">
                {_'Grido.Actions'}
            </th>
        </tr>
        <tr n:if="$filterRenderType == \Grido\Components\Filters\Filter::RENDER_INNER && $filters" class="filter inner">
            {foreach $columns as $column}
                {if $column->hasFilter()}
                    {$control->getFilter($column->getName())->getWrapperPrototype()->startTag()|noescape}
                    {formContainer filters}
                        {input $column->getName()}
                    {/formContainer}
                    {$control->getFilter($column->getName())->getWrapperPrototype()->endTag()|noescape}
                {elseif $column->headerPrototype->rowspan != 2}
                    <th>&nbsp;</th>
                {/if}
            {/foreach}

            <th n:if="$filters" class="buttons" n:block="action">
                {formContainer buttons}
                    {input search}
                    {input reset}
                {/formContainer}
            </th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <td colspan="{=$showActionsColumn ? $columnCount + 1 : $columnCount}">
                <span n:if="$operation" n:block="operations" class="operations"  title="{_'Grido.SelectSomeRow'}">
                    {$form[\Grido\Components\Operation::ID][\Grido\Components\Operation::ID]->control}
                    {?$form[\Grido\Grid::BUTTONS][\Grido\Components\Operation::ID]->controlPrototype->class[] = 'hide'}
                    {$form[\Grido\Grid::BUTTONS][\Grido\Components\Operation::ID]->control}
                </span>
                <span n:if="$paginator->steps && $paginator->pageCount > 1" n:block="paginator" class="paginator">
                    {if $control->page == 1}
                        <span class="btn btn-default btn-xs btn-mini disabled" n:href="page! page => $paginator->getPage() - 1"><i class="glyphicon glyphicon-arrow-left fa fa-arrow-left icon-arrow-left"></i> {_'Grido.Previous'}</span>
                    {else}
                        <a class="btn btn-default btn-xs btn-mini ajax" n:href="page! page => $paginator->getPage() - 1"><i class="glyphicon glyphicon-arrow-left fa fa-arrow-left icon-arrow-left"></i> {_'Grido.Previous'}</a>
                    {/if}
                    {var $steps = $paginator->getSteps()}
                    {foreach $steps as $step}
                        {if $step == $control->page}
                            <span class="btn btn-default btn-xs btn-mini disabled">{$step}</span>
                        {else}
                            <a class="btn btn-default btn-xs btn-mini ajax" n:href="page! page => $step">{$step}</a>
                        {/if}
                        <a n:if="$iterator->nextValue > $step + 1" class="prompt" data-grido-prompt="{_'Grido.EnterPage'}" data-grido-link="{link page! page => 0}">...</a>
                        {var $prevStep = $step}
                    {/foreach}
                    {if $control->page == $paginator->getPageCount()}
                        <span class="btn btn-default btn-xs btn-mini disabled" n:href="page! page => $paginator->getPage() + 1">{_'Grido.Next'} <i class="glyphicon glyphicon-arrow-right fa fa-arrow-right icon-arrow-right"></i></span>
                    {else}
                        <a class="btn btn-default btn-xs btn-mini ajax" n:href="page! page => $paginator->getPage() + 1">{_'Grido.Next'} <i class="glyphicon glyphicon-arrow-right fa fa-arrow-right icon-arrow-right"></i></a>
                    {/if}
                </span>
                <span n:block="count" class="count">
                    {= sprintf($template->translate('Grido.Items'), $paginator->getCountBegin(), $paginator->getCountEnd(), $control->getCount())}
                    {input count}
                    {formContainer buttons}
                        {input perPage, class => 'hide'}
                    {/formContainer}
                    <a n:if="$control->hasExport()" class="btn btn-default btn-xs btn-mini" href="{=$control->getComponent(\Grido\Components\Export::ID)->link('export!')}" title="{_'Grido.ExportAllItems'}"><i class="glyphicon glyphicon-download fa fa-download icon-download"></i></a>
                </span>
            </td>
        </tr>
    </tfoot>
    <tbody>
        {var $propertyAccessor = $control->getPropertyAccessor()}
        {foreach $data as $row}
            {? $checkbox = $operation
                    ? $form[\Grido\Components\Operation::ID][\Grido\Helpers::formatColumnName($propertyAccessor->getProperty($row, $control->getComponent(\Grido\Components\Operation::ID)->getPrimaryKey()))]
                    : NULL;
                $tr = $control->getRowPrototype($row);
                $tr->class[] = $checkbox && $checkbox->getValue()
                    ? 'selected'
                    : NULL;
            }
            {$tr->startTag()|noescape}
                <td n:if="$checkbox" class="checker">
                    {$checkbox->getControl()}
                </td>
                {foreach $columns as $column}
                    {?$td = $column->getCellPrototype($row)}
                    {$td->startTag()|noescape}
                        {if is_string($column->getCustomRender()) && $column->getCustomRenderVariables()}
                            {include $column->getCustomRender() control => $control, presenter => $control->getPresenter(), item => $row, column => $column, (expand) $column->getCustomRenderVariables()}
                        {elseif is_string($column->getCustomRender())}
                            {include $column->getCustomRender() control => $control, presenter => $control->getPresenter(), item => $row, column => $column}
                        {else}
                            {$column->render($row)|noescape}
                        {/if}
                    {$td->endTag()|noescape}
                {/foreach}
                <td n:if="$showActionsColumn" class="actions center">
                    {foreach $actions as $action}
                        {control $action $row}
                    {/foreach}
                    {if !$actions}
                        &nbsp;
                    {/if}
                </td>
            {$tr->endTag()|noescape}
        {/foreach}
        <tr n:if="!$control->getCount()"><td colspan="{=$showActionsColumn ? $columnCount + 1 : $columnCount}" class="no-results">{_'Grido.NoResults'}</td></tr>
    </tbody>
{$control->getTablePrototype()->endTag()|noescape}
{/block}
{/form}
{/snippet}
