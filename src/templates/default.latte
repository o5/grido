{**
 * This file is part of the Grido (http://grido.bugyik.cz)
 *
 * Copyright (c) 2011 Petr BugyÃ­k (http://petr.bugyik.cz)
 *
 * For the full copyright and license information, please view
 * the file LICENSE.md that was distributed with this source code.
 *}

{snippet grid}

{?
    $form->getElementPrototype()->class[] = 'ajax grido';
    $form->getElementPrototype()->{"data-grido-refresh-handler"} = $control->link("refresh!");

    $filterRenderType = $control->getFilterRenderType();

    $columnCount = count($columns) + ($control->hasOperation() ? 1 : 0);
    $showActionsColumn = $actions || ($formFilters && $filterRenderType == \Grido\Components\Filters\Filter::RENDER_INNER);

    $actionThElement = \Nette\Utils\Html::el('th');
    $actionThElement->setText($control->translator->translate('Grido.Actions'));
    $actionThElement->class[] = 'actions center';
}

{block customization}{/block}

{if $form->getErrors()}
<ul n:foreach="$form->getErrors() as $error">
    <li>{$error}</li>
</ul>
{/if}

{form form}
{if $filterRenderType == \Grido\Components\Filters\Filter::RENDER_OUTER}
    {block outerFilterWrapper}
    <div n:block="outerFilter" class="filter outer">
        <div class="items">
            <span n:foreach="$formFilters as $filter" class="grid-filter-{$filter->getName()}">
                {$filter->getLabel()}
                {$filter->getControl()}
            </span>
        </div>
        <div class="buttons">
            {formContainer buttons}
                {block outerFilterControls}
                {if $formFilters}
                    {input search, style => "display:none"}
                {/if}
                {/block}
            {/formContainer}
        </div>
    </div>
    {/block}
{/if}

{block table}
{$control->getTablePrototype()->startTag()|noescape}
    <thead>
        <tr class="head">
            <th n:if="$control->hasOperation()" class="checker"{if $formFilters} rowspan="{if $filterRenderType == \Grido\Components\Filters\Filter::RENDER_OUTER}1{else}2{/if}"{/if}>
                <input type="checkbox" title="{_'Grido.Invert'}">
            </th>
            {foreach $columns as $column}
                {$column->getHeaderPrototype()->startTag()|noescape}
                    {if $column->isSortable()}
                        <a n:if="!$column->getSort()" n:href="sort! [$column->getName() => \Grido\Components\Columns\Column::ORDER_ASC]" class="ajax">{$column->getLabel()|noescape}</a>
                        <a n:if="$column->getSort() == \Grido\Components\Columns\Column::ORDER_ASC" n:href="sort! [$column->getName() => \Grido\Components\Columns\Column::ORDER_DESC]" class="sort ajax asc">{$column->getLabel()|noescape} <i class="arrow"></i></a>
                        <a n:if="$column->getSort() == \Grido\Components\Columns\Column::ORDER_DESC" n:href="sort! [$column->getName() => \Grido\Components\Columns\Column::ORDER_ASC]" class="sort ajax desc">{$column->getLabel()|noescape} <i class="arrow"></i></a>
                    {else}
                        <span>{$column->getLabel()|noescape}</span>
                    {/if}
                {$column->getHeaderPrototype()->endTag()|noescape}
            {/foreach}
            {if $showActionsColumn}
                {=$actionThElement}
            {/if}
        </tr>
        <tr n:if="$filterRenderType == \Grido\Components\Filters\Filter::RENDER_INNER && $formFilters" class="filter inner" n:block="innerFilter">
            {foreach $columns as $column}
                {if $column->hasFilter()}
                    {var $f = $control->getFilter($column->getName())}
                    {$f->getWrapperPrototype()->startTag()|noescape}
                    {formContainer filters}
                    {block innerFilterElement}
                        {if $f instanceof \Grido\Components\Filters\Check}
                            {input $column->getName():}
                        {else}
                            {input $column->getName()}
                        {/if}
                    {/block}
                    {/formContainer}
                    {$control->getFilter($column->getName())->getWrapperPrototype()->endTag()|noescape}
                {elseif $column->headerPrototype->rowspan != 2}
                    <th>&nbsp;</th>
                {/if}
            {/foreach}

            <th n:if="$formFilters" class="buttons" n:block="action">
                {formContainer buttons}
                    {block innerFilterControls}
                        {input search, style => "display:none"}
                    {/block}
                {/formContainer}
            </th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <td colspan="{=$showActionsColumn ? $columnCount + 1 : $columnCount}">
                <span n:if="$control->hasOperation()" n:block="operations" class="operations"  title="{_'Grido.SelectSomeRow'}">
                    {$form[\Grido\Components\Operation::ID][\Grido\Components\Operation::ID]->control}
                    {?$form[\Grido\Grid::BUTTONS][\Grido\Components\Operation::ID]->controlPrototype->class[] = 'hide'}
                    {$form[\Grido\Grid::BUTTONS][\Grido\Components\Operation::ID]->control}
                </span>
                <span n:if="$paginator->steps && $paginator->pageCount > 1" n:block="paginator" class="paginator">
                    {if $control->page == 1}
                        <span class="disabled {$customization->buttonClass}" n:href="page! page => $paginator->getPage() - 1"><i class="{=$customization->getIconClass('arrow-left')}"></i> {_'Grido.Previous'}</span>
                    {else}
                        <a class="ajax {$customization->buttonClass}" n:href="page! page => $paginator->getPage() - 1"><i class="{=$customization->getIconClass('arrow-left')}"></i> {_'Grido.Previous'}</a>
                    {/if}
                    {var $steps = $paginator->getSteps()}
                    {foreach $steps as $step}
                        {if $step == $control->page}
                            <span class="disabled {$customization->buttonClass}">{$step}</span>
                        {else}
                            <a class="ajax {$customization->buttonClass}" n:href="page! page => $step">{$step}</a>
                        {/if}
                        <a n:if="$iterator->nextValue > $step + 1" class="prompt" data-grido-prompt="{_'Grido.EnterPage'}" data-grido-link="{link page! page => 0}">...</a>
                        {var $prevStep = $step}
                    {/foreach}
                    {if $control->page == $paginator->getPageCount()}
                        <span class="disabled {$customization->buttonClass}" n:href="page! page => $paginator->getPage() + 1">{_'Grido.Next'} <i class="{=$customization->getIconClass('arrow-right')}"></i></span>
                    {else}
                        <a class="ajax {$customization->buttonClass}" n:href="page! page => $paginator->getPage() + 1">{_'Grido.Next'} <i class="{=$customization->getIconClass('arrow-right')}"></i></a>
                    {/if}
                </span>
                <span class="right">
                    {block right}
                    <span n:block="perpage" class="count">
                        <label>{= sprintf($template->translate('Grido.Items'), $paginator->getCountBegin(), $paginator->getCountEnd(), $control->getCount())}</label>
                        {block perPageElement}
                            {input count}
                        {/block}
                        {input $form[buttons][perPage], class => 'hide'}
                    </span>
                    {if $control->hasExport()}
                    <span n:block="export" n:foreach="$control->getExports() as $export" class="export">
                        {var $title = $export->title ? : $template->translate('Grido.ExportAllItems')}
                        <a class="{$customization->buttonClass}" href="{=$export->link('export!')}" title="{$title}"><i class="{=$customization->getIconClass('download')}"> {_'Grido.Export'}</i></a>
                    </span>
                    {/if}
                    <span n:block="reset" class="reset">
                        {input $form[buttons][reset]}
                    </span>
                    {/block}
                </span>
            </td>
        </tr>
    </tfoot>
    <tbody>
        {foreach $data as $row}
            {? $checkbox = $control->hasOperation()
                    ? $form[\Grido\Components\Operation::ID][\Grido\Helpers::formatColumnName($control->getProperty($row, $control->getComponent(\Grido\Components\Operation::ID)->getPrimaryKey()))]
                    : NULL;
                $tr = $control->getRowPrototype($row);
                $tr->class[] = $checkbox && $checkbox->getValue()
                    ? 'selected'
                    : NULL;
            }
            {$tr->startTag()|noescape}
                <td n:if="$checkbox" class="checker">
                    {$checkbox->getControl()}
                </td>
                {foreach $columns as $column}
                    {?$td = $column->getCellPrototype($row)}
                    {$td->startTag()|noescape}
                        {if is_string($column->getCustomRender()) && $column->getCustomRenderVariables()}
                            {include $column->getCustomRender() control => $control, presenter => $control->getPresenter(), item => $row, column => $column, (expand) $column->getCustomRenderVariables()}
                        {elseif is_string($column->getCustomRender())}
                            {include $column->getCustomRender() control => $control, presenter => $control->getPresenter(), item => $row, column => $column}
                        {else}
                            {$column->render($row)|noescape}
                        {/if}
                    {$td->endTag()|noescape}
                {/foreach}
                <td n:if="$showActionsColumn" class="actions center" n:block="actions">
                    {foreach $actions as $action}
                        {control $action $row}
                    {/foreach}
                    {if !$actions}
                        &nbsp;
                    {/if}
                </td>
            {$tr->endTag()|noescape}
        {/foreach}
        <tr n:if="!$control->getCount()"><td colspan="{=$showActionsColumn ? $columnCount + 1 : $columnCount}" class="no-results">{_'Grido.NoResults'}</td></tr>
    </tbody>
{$control->getTablePrototype()->endTag()|noescape}
{/block}
{/form}
{/snippet}
